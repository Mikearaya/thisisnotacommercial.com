- name: Tag images
  type: serial
  encrypted_dockercfg_path: dockercfg.encrypted
  steps:
    - service: frontend
      type: push
      image_name: "registry.ucc.dev/thisisnotacommercial/website/frontend"
      image_tag: "{{.Branch}}-latest"
      registry: registry.ucc.dev
    - service: controlpanel
      type: push
      image_name: "registry.ucc.dev/thisisnotacommercial/website/controlpanel"
      image_tag: "{{.Branch}}-latest"
      registry: registry.ucc.dev
    - service: unchained
      type: push
      image_name: "registry.ucc.dev/thisisnotacommercial/website/unchained"
      image_tag: "{{.Branch}}-latest"
      registry: registry.ucc.dev

- name: Tag images as latest
  tag: develop
  type: serial
  encrypted_dockercfg_path: dockercfg.encrypted
  steps:
    - service: frontend
      type: push
      image_name: "registry.ucc.dev/thisisnotacommercial/website/frontend"
      image_tag: "next"
      registry: registry.ucc.dev
    - service: controlpanel
      type: push
      image_name: "registry.ucc.dev/thisisnotacommercial/website/controlpanel"
      image_tag: "next"
      registry: registry.ucc.dev
    - service: unchained
      type: push
      image_name: "registry.ucc.dev/thisisnotacommercial/website/unchained"
      image_tag: "next"
      registry: registry.ucc.dev

- name: Tag images as stable
  tag: master
  type: serial
  encrypted_dockercfg_path: dockercfg.encrypted
  steps:
    - service: frontend
      type: push
      image_name: "registry.ucc.dev/thisisnotacommercial/website/frontend"
      image_tag: "stable"
      registry: registry.ucc.dev
    - service: controlpanel
      type: push
      image_name: "registry.ucc.dev/thisisnotacommercial/website/controlpanel"
      image_tag: "stable"
      registry: registry.ucc.dev
    - service: unchained
      type: push
      image_name: "registry.ucc.dev/thisisnotacommercial/website/unchained"
      image_tag: "stable"
      registry: registry.ucc.dev

- name: Deploy to Testing
  tag: develop
  type: serial
  services:
    - unchaineddeployment
  steps:
    - command: /bin/sh -c '/swarmpit_deploy.sh thisisnotacommercial-test "${SWARMPIT_TOKEN}"'

- name: Deploy to Production
  tag: master
  type: serial
  services:
    - unchaineddeployment
  steps:
    - command: /bin/sh -c '/swarmpit_deploy.sh thisisnotacommercial-prod "${SWARMPIT_TOKEN}"'
