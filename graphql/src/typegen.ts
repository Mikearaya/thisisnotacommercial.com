/**
 * This file was automatically generated by Nexus 0.11.6
 * Do not make changes to this file directly
 */


import { core } from "nexus"
declare global {
  interface NexusGenCustomDefinitionMethods<TypeName extends string> {
    date<FieldName extends string>(fieldName: FieldName, ...opts: core.ScalarOutSpread<TypeName, FieldName>): void // "Date";
  }
}

declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
}

export interface NexusGenEnums {
  PaymentEnum: "Coinbase" | "Invoce" | "Paypal" | "Stripe"
  ShippingEnum: "Registered" | "Standard" | "Unstamped"
}

export interface NexusGenRootTypes {
  Order: { // root type
    Address: string; // String!
    Country?: string | null; // String
    Location: string; // String!
    Name: string; // String!
    Paid?: any | null; // Date
    Payment: NexusGenEnums['PaymentEnum']; // PaymentEnum!
    Price: number; // Int!
    Shipping: NexusGenEnums['ShippingEnum']; // ShippingEnum!
    ZIP: string; // String!
  }
  Query: {};
  String: string;
  Int: number;
  Float: number;
  Boolean: boolean;
  ID: string;
  Date: any;
}

export interface NexusGenAllTypes extends NexusGenRootTypes {
  PaymentEnum: NexusGenEnums['PaymentEnum'];
  ShippingEnum: NexusGenEnums['ShippingEnum'];
}

export interface NexusGenFieldTypes {
  Order: { // field return type
    Address: string; // String!
    Country: string | null; // String
    Location: string; // String!
    Name: string; // String!
    Paid: any | null; // Date
    Payment: NexusGenEnums['PaymentEnum']; // PaymentEnum!
    Price: number; // Int!
    Shipping: NexusGenEnums['ShippingEnum']; // ShippingEnum!
    ZIP: string; // String!
  }
  Query: { // field return type
    ok: boolean; // Boolean!
  }
}

export interface NexusGenArgTypes {
}

export interface NexusGenAbstractResolveReturnTypes {
}

export interface NexusGenInheritedFields {}

export type NexusGenObjectNames = "Order" | "Query";

export type NexusGenInputNames = never;

export type NexusGenEnumNames = "PaymentEnum" | "ShippingEnum";

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = "Boolean" | "Date" | "Float" | "ID" | "Int" | "String";

export type NexusGenUnionNames = never;

export interface NexusGenTypes {
  context: any;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  allTypes: NexusGenAllTypes;
  inheritedFields: NexusGenInheritedFields;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractResolveReturn: NexusGenAbstractResolveReturnTypes;
}